#include <iostream>
#include <cmath> // For abs()

using namespace std;

// Function to calculate FCFS head movement
int calculateFCFS(int requests[], int numRequests, int initialHead) {
    int head = initialHead;
    int totalMovement = 0;

    for (int i = 0; i < numRequests; ++i) {
        totalMovement += abs(requests[i] - head); // Calculate movement
        head = requests[i]; // Move the head to the current request
    }
    return totalMovement;
}

int main() {
    int initialHead = 143; // Initial position of the disk head
    int requests[] = {86, 147, 91, 177, 94, 150, 102, 175, 130}; // Request queue
    int numRequests = sizeof(requests) / sizeof(requests[0]); // Number of requests

    cout << "Disk Scheduling Algorithm: FCFS (First-Come, First-Served)\n";
    cout << "Initial Head Position: " << initialHead << "\n";
    cout << "Requests: ";
    for (int i = 0; i < numRequests; ++i) {
        cout << requests[i] << " ";
    }
    cout << "\n";

    // Calculate and display the total head movement
    int totalMovement = calculateFCFS(requests, numRequests, initialHead);
    cout << "Total head movement using FCFS: " << totalMovement << " tracks\n";

    return 0;
}
